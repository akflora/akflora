#!/bin/gawk -f

# Include function libraries
# Set explicit path, since # SetEnv in .htaccess was not passing
#   the AWKPATH env var.
@include "/usr/local/share/awk/db_sql.awk"
@include "/usr/local/share/awk/util_http.awk"
@include "/usr/local/share/awk/db_secrets.awk"

BEGIN{
  PROCINFO["sorted_in"] = "@ind_str_asc"
  
  db_secrets()
 
  # READ QUERY STRING
  split(ENVIRON["QUERY_STRING"], qs, "&");
  for (i in qs) {
    split(qs[i], qp, "=");
    f[qp[1]] = substr(urldecode(qp[2]),1,2000); 
  }
  
  # DETERMINE AND EXECUTE METHOD
  if           (f["page"] == "matrix")  matrix()
  else if           (f["page"] == "cell")   cell()
  else defaultpage() ;

  exit 0
}


function matrix(   ntaxa, charID, taxaID, haschar, charx, name,  \
                   i, j, s, out, gen) {

  header("Data matrix")
  
  # Table header
  db_query("akchars", "SELECT `char`, `state`, `id` FROM chars \
            ORDER BY `char`, `state`;")
  for (i = 1; i <= DBQr; i++) {
    charID[i] = DBQ[i, "id"]
    char[i] = DBQ[i, "char"]
    state[i] = DBQ[i, "state"]
    charx[char[i]][state[i]] = DBQ[i, "id"]
  }

  print "<table>"
  print "<tr>"
  print "<td>Taxon</td>"
  for (i in charx) 
    print "<td><b>" i "</b></td>"
  print "</tr>"
  db_clear()

  # Taxon names
  db_query("akchars", "SELECT `name`, `guid`, `id`, `genID` FROM \
            `taxa` WHERE `name` LIKE '%" f["genus"] "%'ORDER BY `name`;")
  ntaxa = DBQr
  for (i = 1; i <= DBQr; i++) {
    name[i] = DBQ[i, "name"] " (" DBQ[i, "guid"] ")"
    taxaID[i] = DBQ[i, "id"]
    if (DBQ[i, "genID"]) gen[taxaID[i]] = DBQ[i, "genID"]
  }
  db_clear()

  # Table data
  db_query("akchars", "SELECT `taxaID`, `charID` FROM `TxC`;")
  for (i = 1 ; i <= DBQr; i++)
    haschar[DBQ[i, "taxaID"], DBQ[i, "charID"]] = 1
  db_clear()
  
  for (i = 1 ; i <= ntaxa; i++) {
    print "<tr>"
    print "<td>" gensub(/^(.*)\ (\(.*\))$/, "<b>\\1</b> \\2", "G", \
                        name[i]) "</td>"
    for (j in charx) {
      print "<td onclick=\"location.href='do?page=cell&amp;char=" j \
                  "&amp;taxaID=" taxaID[i]"&amp;genus=" f["genus"] "';\">"
      out = ""
      for (s in charx[j]) {
        # test for char at genus level
        if (haschar[gen[taxaID[i]], charx[j][s]]) out = out \
               "<span style=\"color:blue;\">{" s "}</span>, "
        if (haschar[taxaID[i], charx[j][s]]) out = out s ", "
      }
      gsub(/,\ $/,"",out)
      # if (out) out = out " "
      # out = out "<a href=\"do?page=cell&amp;char=" j \
      #          "&amp;taxaID=" taxaID[i]"&amp;genus=" f["genus"] "\">â†’</a>"
      if (!out) out = "&#160;"
      print out
      # print "</a>"
      print "</td>"
    }
    print "</tr>"
  }

  print "</table>"
  print "<p align=\"right\"><br/><br/><a href=\"do\">Home</a></p>"

  footer()

}

function cell(   name, actiontext, ES, i, srcfail) {

  if (f["preaction"] == "delete") {
    ES = db_sql("akchars", "DELETE FROM `TxC` WHERE `id` = " f["charID"] ";")
    if (ES) actiontext = "UPDATE FAILURE"
    else actiontext = "Character state datum " f["charID"] " deleted"
    actiontext = "<br/><p><span style=\"color:red;\">" actiontext "</span>"
  }
  else if (f["preaction"] == "new") {
    # test for accepable sources
    gsub(/\ /,"",f["sources"])
    split(f["sources"],s,",")
    for (i in s)
      if (s[i] !~ /^(cody|dall|fna|hult)$/) srcfail = 1
    if (f["sources"] && srcfail) actiontext =                           \
      "<br/><p><span style=\"color:red;\">INCORRECT SOURCE ABBREVIATION</span>"
    else {
      ES = db_sql("akchars", "INSERT INTO `TxC` (`taxaID`, `charID`, `person`, `sources`) \
                 VALUES (" f["taxaID"] "," f["charID"]", '" f["person"] "','" f["sources"] "');")
      if (ES) actiontext = "INSERT FAILURE"
      else actiontext = "Character state datum " f["charID"] " added"
      actiontext = "<br/><p><span style=\"color:red;\">" actiontext "</span>"
    }
  }

  header("Data cell")
  
  # Taxon names
  db_query("akchars", "SELECT `name`, `guid`, `genID` FROM \
            `taxa` WHERE `id` = " f["taxaID"] ";")
  name = "<b>" DBQ[1,"name"] "</b> (" DBQ[1,"guid"] ")"
  db_clear()
  
  # print "<h1>Data cell</h1>"
  print "<table><tr><td><i>Taxon</i></td><td>" name "</td></tr>"
  print "<tr><td><i>Character</i></td><td><b>" f["char"] "</b></td></tr></table>"

  db_query("akchars", "SELECT `state`, `timestamp`, `person`, `sources`, `TxC`.`id` FROM `TxC`, \
            `chars` WHERE `taxaID` = " f["taxaID"] " AND `chars`.`id` = \
            `TxC`.`charID` AND `chars`.`char` = '" f["char"] "';")

  # if (DBQr) print "<p>Scored as:</p>"
  print "<ul>"

  for (i = 1; i <= DBQr; i++) {
    print "<li><b>" DBQ[i, "state"] "</b><ul>"
    print "<li><table>"
    print "<tr><td><i>Sources</i></td><td>" DBQ[i, "sources"] "</td></tr>"
    print "<tr><td><i>Date</i></td><td>" DBQ[i, "timestamp"] "</td></tr>"
    print "<tr><td><i>By</i></td><td>" DBQ[i, "person"] "</td></tr>"
    print "<tr><td><a href=\"do?page=cell&amp;char=" f["char"] "&amp;taxaID=" f["taxaID"] "&amp;genus=" f["genus"] "&amp;preaction=delete&amp;charID=" DBQ[i,"id"] "\">DELETE</a></td><td></td></tr>"
    print "</table></li>"
    print "</ul></li>"
  }
  print "</ul>"
  db_clear()

  # print "<hr/>"
  print "<form action=\"do\">"
  print "<input type=\"hidden\" name=\"page\" value=\"cell\"/>"
  print "<input type=\"hidden\" name=\"preaction\" value=\"new\"/>"
  print "<input type=\"hidden\" name=\"char\" value=\"" f["char"] "\"/>"
  print "<input type=\"hidden\" name=\"taxaID\" value=\"" f["taxaID"] "\"/>"
  print "<input type=\"hidden\" name=\"genus\" value=\"" f["genus"] "\"/>"
  print "<p>Enter new character state:</p>"
  print "<ul><li><select name=\"charID\">"
  db_query("akchars", "SELECT `state`, `id` FROM `chars` WHERE `char` = \
                       '" f["char"] "';")
  for (i = 1; i <= DBQr; i++)
    print "<option value=\"" DBQ[i, "id"] "\">" DBQ[i, "state"] "</option>"
  db_clear()
  print "</select>"
  
  print "<ul><li>By: "
  print "<select name=\"person\">"
  print "<option value=\"Brian\">Brian</option>"
  print "<option value=\"Cam\">Cam</option>"
  print "<option value=\"Steffi\">Steffi</option>"
  print "</select></li>"
  print "<li>Sources: <input type=\"text\" name=\"sources\"/>  (Allowed: <tt>hult, fna, cody, dall</tt>)</li>"
  print "<li><input type=\"submit\" value=\"Go\"/></li>"
  print "</ul></ul></form>"
  
  print "<p align=\"right\"><a href=\"do?page=matrix&amp;genus=" f["genus"]    \
    "\">Return to matrix</a></p>" 

  if (actiontext) print actiontext
  
  footer()
}


function header(title) {
  
  # Use html5
  print "Content-type: text/html\n"
  print "<!DOCTYPE html>"
  print "<html xmlns=\"http://www.w3.org/1999/xhtml\">"
  print "<head><title>" title "</title>"
  print "<meta http-equiv=\"Content-Type\" content=\"text/html; \
           charset=utf-8\" /><link rel=\"stylesheet\" \
           href=\"../css/default.css\" type=\"text/css\" />"
  print "<link href=\"https://fonts.googleapis.com/css?family=Montserrat\" \
           rel=\"stylesheet\"/>"
  print "<link href=\"../img/akflora.ico\" rel=\"shortcut icon\" \
           type=\"image/x-icon\"/>"
  # print "<style>td a:hover { display:block; width:100%; text-decoration: none;}</style>"
  print "</head>\n<body>"
}

function defaultpage()
{
  header("Character entry webapp");
  
  print "<h1>Character entry webapp</h1>"
  print "<ul>"
  print "<li>Character matrix for genus: "
  print "  <form action=\"do\">"
  print "    <input type=\"text\" name=\"genus\"/>"
  print "    <input type=\"hidden\" name=\"page\" value=\"matrix\"/>"
  print "    <input type=\"submit\" value=\"Go\"/>"
  print "  </form></li>"
  print "</ul>"
  
  footer()
}

function footer()
{
  print "</body>\n</html>";
}
